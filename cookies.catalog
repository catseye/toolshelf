# "cookies" for toolshelf.

# When you try to dock a source tree, toolshelf looks in this file to
# see if it is listed here.  If it is, it uses the hints listed in this file.

### Mercurial

*/*/mercurial-1.9.3
  build_command make local
  interesting_executables hg

*/*/dulwich-0.9.5
  exclude_paths dulwich/tests

*/durin42/hg-git
  build_command find . -name '*.pyc' -exec rm {} \;

### Infra

*/*/bison-2.*
  exclude_paths etc example build-aux

# Unintelligently, ncurses' build system assumes you want the C++ bindings,
# and therefore, that you have a C++ compiler.  Shouldn't it at least check?
# (If I don't have a C++ compiler, I probably don't want the C++ bindings, eh?)
# TODO: possibly link libcurses.so to libncurses.so as part of build, too
*/*/ncurses-5.*
  build_command ./configure --with-shared --without-cxx --without-cxx-binding --prefix=`pwd`/install && make && make install
  include_dirs install/include install/include/ncurses

*/*/libzip-0.*
  include_dirs install/include install/lib/libzip/include

### Tools

*/*/make-3.81
  interesting_executables make

# eesh
*/*/tree-1.6.0
  build_command make "OBJS=tree.o unix.o html.o xml.o hash.o color.o strverscmp.o" "CFLAGS=-O2 -Wall"

*/*/nmap-6.40
  build_command ./configure --with-liblua=`toolshelf pwd lua-5.1.5` --prefix=`pwd` && make && make install

# needs libreadline-dev
*/*/rlwrap-0.37
  exclude_paths test

*/*/colordiff-1.0.13
  build_command ln -s cdiff.sh cdiff && ln -s colordiff.pl colordiff

*/ymattw/cdiff
  build_command echo "No need to build."

# */*/curl-7.*
#   only_paths install

*/*/meld-1.8.*
  build_command echo "No need to build."

### Languages

#### Python ####

pypi.python.org/*/atomize-0.*
  python_modules src2/atomize.py

# can come from pypi.python.org or pyyaml.org
*/*/PyYAML-3.*
  python_modules lib/yaml

# just running "make" will try to install stuff to /usr/local.  sigh
pypi.python.org/*/Markdown-2.*
  python_modules markdown
  build_command python setup.py build

pypi.python.org/*/grin-1.*
  python_modules grin.py

pypi.python.org/*/mock-1.*
  python_modules mock.py

github.com/django/django
  python_modules django

bitbucket.org/pypy/pypy
  build_command echo "Not building, use 'python `which rpython`' to run rpython."
  exclude_paths ctypes_configure dotviewer include lib_pypy lib-python py pypy _pytest site-packages testrunner

github.com/noamraph/tqdm
  python_modules tqdm.py

#### Lua ####

*/*/lua-5.*
  build_command@Linux make linux && make INSTALL_TOP=`pwd`/install install
  build_command make ansi && make INSTALL_TOP=`pwd`/install install
  exclude_paths test

github.com/stevedonovan/Penlight
  lua_modules lua/pl

github.com/keplerproject/xavante
  exclude_paths examples

#### Other ####

*/*/perl-5.*
  build_command C_INCLUDE_PATH="" ./Configure -des -Dprefix=`pwd`/install && C_INCLUDE_PATH="" make && make install

*/erlang/otp
  build_command ./otp_build all
  exclude_paths bootstrap erts make plt release system xcomp cygwin

*/*/otp_src_R16B03-*
  build_command ./configure --prefix=`pwd` --without-termcap && make
  exclude_paths bootstrap erts make plt release system xcomp cygwin

# here's hoping that most 'weirdo' platforms are sufficiently like *BSD...
*/*/chicken-4.*
  build_command@Linux make PLATFORM=linux
  build_command@NetBSD make PLATFORM=bsd
  build_command make PLATFORM=bsd

factorcode.org/git/factor
  exclude_paths basis extra unmaintained

*/*/seed7*
  build_command cd src && make depend && make

github.com/*/Ophis
  exclude_paths src/scripts vendor
  test_command python ./tests/test_ophis.py

### Emulators

# Using the bundled pixman also requires you have autconf installed, sheesh
# ...so install pixman first with toolshelf instead.
# This also requires curses, but will use SDL if it can find it.
*/*/qemu-1.*
  build_command ./configure --target-list=i386-linux-user,i386-softmmu --with-system-pixman --enable-curses --prefix=`pwd`/install && make

*/*/bochs-2.6.*
  exclude_paths doc build bx_debug bios

*/*/vice-2.4
  build_command ./configure --enable-sdlui --without-x --disable-gnomeui --with-sdlsound --prefix=`pwd` && make && make install && ln -s lib64 lib

### Experimental/Github stuff

*/kulp/tenyr
  exclude_paths bench ui hw scripts

*/catseye/funicular
  exclude_paths eg

*/catseye/the-platform
  exclude_paths distrepos

*/digego/extempore
  build_command ./all.bash

*/paulhodge/circa
  exclude_paths platform

*/poeschko/Mathics
  exclude_paths mathics/web/media
